// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SocialNetwork_DAL.Entities;

namespace SocialNetwork_DAL.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.DuoChat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersonLogin1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonLogin2")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DuoChat");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Friend", b =>
                {
                    b.Property<Guid>("FriendId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Friend1_Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Friend2_Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("FriendId");

                    b.HasIndex("PersonId");

                    b.ToTable("Friend");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Invite", b =>
                {
                    b.Property<Guid>("InviteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Invited_Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inviter_Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("InviteId");

                    b.HasIndex("PersonId");

                    b.ToTable("Invite");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("MessageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("DuoChatId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Message_Data")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DuoChatId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Login")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Friend", b =>
                {
                    b.HasOne("SocialNetwork_DAL.Entities.Models.Person", null)
                        .WithMany("FriendsList")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Invite", b =>
                {
                    b.HasOne("SocialNetwork_DAL.Entities.Models.Person", null)
                        .WithMany("InvitesList")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("SocialNetwork_DAL.Entities.Models.Message", b =>
                {
                    b.HasOne("SocialNetwork_DAL.Entities.Models.DuoChat", null)
                        .WithMany("Messages")
                        .HasForeignKey("DuoChatId");
                });
#pragma warning restore 612, 618
        }
    }
}
